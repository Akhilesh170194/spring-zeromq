package com.aoneconsultancy.zeromqpoc;

import com.aoneconsultancy.zeromqpoc.model.payload.DemoPayload;
import org.junit.jupiter.api.Test;

import java.time.LocalDateTime;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * Test to verify that Lombok annotations are working correctly.
 */
public class LombokTest {

    @Test
    void testLombokAnnotations() {
        // Test @Builder annotation
        LocalDateTime now = LocalDateTime.now();
        DemoPayload payload = DemoPayload.builder()
                .id(1L)
                .name("Test")
                .createdAt(now)
                .build();
        
        // Test @Data annotation (getters)
        assertThat(payload.getId()).isEqualTo(1L);
        assertThat(payload.getName()).isEqualTo("Test");
        assertThat(payload.getCreatedAt()).isEqualTo(now);
        
        // Test @Data annotation (setters)
        payload.setId(2L);
        payload.setName("Updated");
        LocalDateTime updated = LocalDateTime.now();
        payload.setCreatedAt(updated);
        
        assertThat(payload.getId()).isEqualTo(2L);
        assertThat(payload.getName()).isEqualTo("Updated");
        assertThat(payload.getCreatedAt()).isEqualTo(updated);
        
        // Test @NoArgsConstructor annotation
        DemoPayload emptyPayload = new DemoPayload();
        assertThat(emptyPayload).isNotNull();
        
        // Test @AllArgsConstructor annotation
        DemoPayload fullPayload = new DemoPayload(3L, "Full", now);
        assertThat(fullPayload.getId()).isEqualTo(3L);
        assertThat(fullPayload.getName()).isEqualTo("Full");
        assertThat(fullPayload.getCreatedAt()).isEqualTo(now);
        
        // Test toString() method generated by @Data
        String toString = payload.toString();
        assertThat(toString).contains("id=2");
        assertThat(toString).contains("name=Updated");
    }
}